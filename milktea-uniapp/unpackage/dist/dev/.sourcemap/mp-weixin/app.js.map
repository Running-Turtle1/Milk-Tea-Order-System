{"version":3,"file":"app.js","sources":["App.vue","main.js"],"sourcesContent":["<script>\n\texport default {\n\t\tonShow: function() {\n\t\t\tconsole.log('App Show');\n\t\t},\n\t\tonHide: function() {\n\t\t\tconsole.log('App Hide');\n\t\t}\n\t}\n</script>\n\n<style>\n\t/*每个页面公共css */\n\t@import url('./static/icons/iconfont.css');\n\t\n\t/* 全局样式 */\n\tpage {\n\t\tbackground-color: #121212;\n\t\tfont-family: -apple-system, BlinkMacSystemFont, 'Helvetica Neue', Helvetica, Segoe UI, Arial, Roboto, 'PingFang SC', 'miui', 'Hiragino Sans GB', 'Microsoft Yahei', sans-serif;\n\t\tcolor: #ffffff;\n\t\toverflow: hidden;\n\t}\n\t\n\t/* 隐藏所有滚动条 */\n\t::-webkit-scrollbar {\n\t\tdisplay: none !important;\n\t\twidth: 0 !important;\n\t\theight: 0 !important;\n\t\tbackground: transparent !important;\n\t}\n\t\n\t/* 让所有可滚动元素都隐藏滚动条但保持可滚动 */\n\tpage,\n\tview,\n\tscroll-view,\n\t.scroll-view,\n\t.uni-scroll-view,\n\t.scrollable,\n\t.uni-scroll-view-content {\n\t\t-webkit-overflow-scrolling: touch;\n\t\tscrollbar-width: none; /* Firefox */\n\t\t-ms-overflow-style: none; /* IE 10+ */\n\t}\n\t\n\t/* 隐藏iOS上的滚动条 */\n\t::-webkit-scrollbar {\n\t\twidth: 0 !important;\n\t\theight: 0 !important;\n\t\tbackground-color: transparent !important;\n\t\tdisplay: none !important;\n\t}\n\t\n\t/* 确保内容可以滚动但不显示滚动条 */\n\t.uni-page-body,\n\t.uni-page-head,\n\t.uni-page-wrapper {\n\t\t-webkit-overflow-scrolling: touch;\n\t\tscrollbar-width: none;\n\t\t-ms-overflow-style: none;\n\t}\n\t\n\t/* 为浮动导航栏添加深色背景 */\n\t.uni-navbar {\n\t\tbackground-color: #1a1a1a !important;\n\t}\n\t\n\t.uni-navbar__header {\n\t\tbackground-color: #1a1a1a !important;\n\t}\n\t\n\t.uni-navbar__header-btns {\n\t\tcolor: #ffffff !important;\n\t}\n\t\n\t.uni-navbar__header-title {\n\t\tcolor: #ffffff !important;\n\t}\n\t\n\t/* 导航按钮图标设置为白色 */\n\t.uni-navbar__header-btns-left,\n\t.uni-navbar__header-btns-right {\n\t\tcolor: #ffffff !important;\n\t}\n\t\n\t.uni-navbar__header-container {\n\t\tcolor: #ffffff !important;\n\t}\n\t\n\t.uni-nav-bar-text,\n\t.uni-nav-bar .uni-icon {\n\t\tcolor: #ffffff !important;\n\t}\n\t\n\t/* 导航栏上的所有图标和文字设置为白色 */\n\t.uni-navbar .uni-icon,\n\t.uni-navbar text,\n\t.uni-navbar view {\n\t\tcolor: #ffffff !important;\n\t}\n\t\n\t/* 返回箭头设置为白色 */\n\t.uni-navbar .uni-icon-back,\n\t.uni-navbar .uni-icon-left {\n\t\tcolor: #ffffff !important;\n\t}\n\t\n\t/* 确保tabbar底部没有白条 */\n\t.uni-tabbar {\n\t\tbackground-color: #1a1a1a !important;\n\t\tborder-top-color: #2a2a2a !important;\n\t}\n</style>\n","import App from './App'\n\n// #ifndef VUE3\nimport Vue from 'vue'\nimport './uni.promisify.adaptor'\nimport api from './utils/api.js'\n\nVue.config.productionTip = false\nApp.mpType = 'app'\n\n// 配置API请求拦截器\napi.setRequestInterceptor(options => {\n  // 注意：token已在api.js统一添加，这里可以添加其他自定义处理\n  console.log('请求拦截器:', options.url);\n  return options;\n});\n\n// 配置API响应拦截器\napi.setResponseInterceptor(res => {\n  // 注意：401错误已在api.js中统一处理\n  // 这里可以添加其他自定义响应处理\n  console.log('响应拦截器:', res.statusCode);\n  \n  // 处理403错误（禁止访问）\n  if (res.statusCode === 403 || (res.data && res.data.code === 403)) {\n    uni.showToast({\n      title: '没有权限访问该资源',\n      icon: 'none'\n    });\n  }\n  \n  return res;\n});\n\n// 将API注入到Vue原型，方便在组件中使用\nVue.prototype.$api = api;\n\nconst app = new Vue({\n  ...App\n})\napp.$mount()\n// #endif\n\n// #ifdef VUE3\nimport { createSSRApp } from 'vue'\nexport function createApp() {\n  const app = createSSRApp(App)\n  return {\n    app\n  }\n}\n// #endif"],"names":["uni","createSSRApp","App"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACC,MAAK,YAAU;AAAA,EACd,QAAQ,WAAW;AAClBA,kBAAAA,MAAY,MAAA,OAAA,gBAAA,UAAU;AAAA,EACtB;AAAA,EACD,QAAQ,WAAW;AAClBA,kBAAAA,MAAY,MAAA,OAAA,gBAAA,UAAU;AAAA,EACvB;AACD;ACqCM,SAAS,YAAY;AAC1B,QAAM,MAAMC,cAAY,aAACC,SAAG;AAC5B,SAAO;AAAA,IACL;AAAA,EACD;AACH;;;"}