{"version":3,"file":"avatar-view.js","sources":["pages/user/avatar-view.vue","D:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvdXNlci9hdmF0YXItdmlldy52dWU"],"sourcesContent":["<template>\n\t<view class=\"avatar-view-container\">\n\t\t<!-- 自定义导航栏 -->\n\t\t<view class=\"custom-navbar\">\n\t\t\t<view class=\"navbar-left\" @click=\"goBack\">\n\t\t\t\t<image src=\"/static/icons/common/back.svg\" class=\"back-icon\"></image>\n\t\t\t</view>\n\t\t\t<view class=\"navbar-title\">头像</view>\n\t\t\t<view class=\"navbar-right\"></view>\n\t\t</view>\n\t\t\n\t\t<!-- 头像展示区域 -->\n\t\t<view class=\"avatar-display\">\n\t\t\t<image \n\t\t\t\t:src=\"avatarUrl || '/static/default-avatar.png'\" \n\t\t\t\tmode=\"aspectFill\" \n\t\t\t\tclass=\"avatar-image\"\n\t\t\t\t@error=\"handleImageError\"\n\t\t\t></image>\n\t\t</view>\n\t\t\n\t\t<!-- 操作按钮区域 -->\n\t\t<view class=\"action-buttons\">\n\t\t\t<button class=\"action-btn upload-btn\" @click=\"uploadAvatar\">更换头像</button>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\n\timport api from '@/utils/api.js';  // 静态导入\n\t\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tavatarUrl: '',\n\t\t\t\tisVirtualKeyboardShowing: false,\n\t\t\t\timageLoadError: false\n\t\t\t}\n\t\t},\n\t\tonLoad(options) {\n\t\t\t// 如果有传入的头像URL，则使用传入的\n\t\t\tif (options.url) {\n\t\t\t\tthis.avatarUrl = decodeURIComponent(options.url);\n\t\t\t} else {\n\t\t\t\t// 否则加载用户当前头像\n\t\t\t\tthis.loadUserAvatar();\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\t// 返回上一页\n\t\t\tgoBack() {\n\t\t\t\tuni.navigateBack();\n\t\t\t},\n\t\t\t\n\t\t\t// 加载用户头像\n\t\t\tloadUserAvatar() {\n\t\t\t\tconst token = uni.getStorageSync('token');\n\t\t\t\tif (!token) {\n\t\t\t\t\tthis.showToast('请先登录');\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tuni.navigateBack();\n\t\t\t\t\t}, 1500);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tapi.request({\n\t\t\t\t\turl: '/user/profile',\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tconsole.log('获取用户信息响应:', res.data);\n\t\t\t\t\t\tif (res.data.code === 200) {\n\t\t\t\t\t\t\t// 使用工具方法处理图片URL\n\t\t\t\t\t\t\tthis.avatarUrl = api.processImageUrl(res.data.data.avatar || '');\n\t\t\t\t\t\t} else if (res.data.code === 401) {\n\t\t\t\t\t\t\t// Token失效\n\t\t\t\t\t\t\tthis.handleTokenExpired();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.showToast(res.data.message || '获取用户信息失败');\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\tconsole.error('网络请求失败:', err);\n\t\t\t\t\t\tthis.showToast('网络请求失败');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 处理图片加载错误\n\t\t\thandleImageError() {\n\t\t\t\tif (!this.imageLoadError) {\n\t\t\t\t\tthis.imageLoadError = true;\n\t\t\t\t\tthis.showToast('图片加载失败，使用默认头像');\n\t\t\t\t\tthis.avatarUrl = '/static/default-avatar.png';\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 上传新头像\n\t\t\tuploadAvatar() {\n\t\t\t\tuni.chooseImage({\n\t\t\t\t\tcount: 1,\n\t\t\t\t\tsizeType: ['compressed'],\n\t\t\t\t\tsourceType: ['album', 'camera'],\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tconst tempFilePaths = res.tempFilePaths;\n\t\t\t\t\t\tconst token = uni.getStorageSync('token');\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\t\ttitle: '上传中...'\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst baseUrl = api.getBaseUrl();\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.uploadFile({\n\t\t\t\t\t\t\turl: `${baseUrl}/files/avatar`,\n\t\t\t\t\t\t\tfilePath: tempFilePaths[0],\n\t\t\t\t\t\t\tname: 'file',\n\t\t\t\t\t\t\theader: {\n\t\t\t\t\t\t\t\t'Authorization': 'Bearer ' + token\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsuccess: (uploadRes) => {\n\t\t\t\t\t\t\t\tconsole.log('头像上传响应:', uploadRes);\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst result = JSON.parse(uploadRes.data);\n\t\t\t\t\t\t\t\t\tif (result.code === 200) {\n\t\t\t\t\t\t\t\t\t\t// 使用工具方法处理图片URL\n\t\t\t\t\t\t\t\t\t\tthis.avatarUrl = api.processImageUrl(result.data.url);\n\t\t\t\t\t\t\t\t\t\tthis.showToast('头像上传成功', 'success');\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// 更新本地存储的用户信息\n\t\t\t\t\t\t\t\t\t\tconst userInfo = uni.getStorageSync('userInfo') || {};\n\t\t\t\t\t\t\t\t\t\tuserInfo.avatar = result.data.url;\n\t\t\t\t\t\t\t\t\t\tuni.setStorageSync('userInfo', userInfo);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis.showToast(result.message || '上传失败');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tconsole.error('解析响应失败:', e);\n\t\t\t\t\t\t\t\t\tthis.showToast('响应解析失败');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\t\t\tconsole.error('上传失败:', err);\n\t\t\t\t\t\t\t\tthis.showToast('上传失败，请检查网络');\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 处理Token过期\n\t\t\thandleTokenExpired() {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '登录已过期，请重新登录',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t});\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tuni.navigateTo({\n\t\t\t\t\t\turl: '/pages/login/login'\n\t\t\t\t\t});\n\t\t\t\t}, 1500);\n\t\t\t},\n\t\t\t\n\t\t\t// 显示提示信息\n\t\t\tshowToast(title, icon = 'none') {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle,\n\t\t\t\t\ticon\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n\t.avatar-view-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tbackground-color: #121212;\n\t\tgap: 100rpx;\n\t\tpadding-bottom: 50rpx;\n\t}\n\t\n\t/* 自定义导航栏 */\n\t.custom-navbar {\n\t\twidth: 100%;\n\t\theight: 90rpx;\n\t\tpadding-top: var(--status-bar-height);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tbackground-color: #1a1a1a;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: 9999;\n\t}\n\t\n\t.navbar-left {\n\t\tpadding: 0 30rpx;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\t\n\t.navbar-title {\n\t\tfont-size: 32rpx;\n\t\tcolor: #ffffff;\n\t\tfont-weight: bold;\n\t}\n\t\n\t.navbar-right {\n\t\twidth: 100rpx;\n\t}\n\t\n\t.back-icon {\n\t\twidth: 40rpx;\n\t\theight: 40rpx;\n\t}\n\t\n\t/* 头像展示区域 */\n\t.avatar-display {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tflex: 1;\n\t}\n\t\n\t.avatar-image {\n\t\twidth: 600rpx;\n\t\theight: 600rpx;\n\t\tborder-radius: 20rpx;\n\t\tbackground-color: #1a1a1a;\n\t\tbox-shadow: 0 8rpx 20rpx rgba(0, 0, 0, 0.3);\n\t}\n\t\n\t/* 操作按钮区域 */\n\t.action-buttons {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tpadding: 0 50rpx;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.action-btn {\n\t\twidth: 80%;\n\t\tmargin: 0 20rpx;\n\t\theight: 80rpx;\n\t\tline-height: 80rpx;\n\t\tfont-size: 28rpx;\n\t\tborder-radius: 40rpx;\n\t}\n\t\n\t.upload-btn {\n\t\tbackground-color: #7b68ee;\n\t\tcolor: #ffffff;\n\t\tborder: none;\n\t}\n</style> ","import MiniProgramPage from 'C:/Users/LXD/Desktop/奶茶点单系统/milktea-uniapp/pages/user/avatar-view.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","api"],"mappings":"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"}