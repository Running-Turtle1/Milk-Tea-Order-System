{"version":3,"file":"image-utils.js","sources":["utils/image-utils.js"],"sourcesContent":["/**\r\n * 图片工具类 - 处理图片URL缓存和显示问题\r\n */\r\n\r\n// 获取当前时间戳\r\nconst getTimestamp = () => {\r\n  return new Date().getTime();\r\n};\r\n\r\n// 全局缓存破坏参数 - 应用启动时生成一个固定时间戳\r\nconst CACHE_BUSTER = getTimestamp();\r\n\r\n// 为图片URL添加时间戳，防止浏览器缓存问题\r\nconst addTimestampToUrl = (url, useGlobalTimestamp = true) => {\r\n  if (!url) return '';\r\n  \r\n  // 如果不是网络图片或已经是静态资源路径，直接返回\r\n  if (url.startsWith('/static/')) return url;\r\n  \r\n  // 如果已存在破坏缓存的时间戳参数，先移除它\r\n  let cleanUrl = url;\r\n  if (url.includes('t=')) {\r\n    cleanUrl = url.replace(/([?&])t=\\d+(&|$)/, (match, p1, p2) => {\r\n      return p2 === '&' ? p1 : '';\r\n    });\r\n  }\r\n  \r\n  // 如果已经有参数，使用&添加时间戳，否则使用?\r\n  const separator = cleanUrl.includes('?') ? '&' : '?';\r\n  // 使用全局时间戳或动态时间戳\r\n  const timestamp = useGlobalTimestamp ? CACHE_BUSTER : getTimestamp();\r\n  \r\n  return `${cleanUrl}${separator}t=${timestamp}`;\r\n};\r\n\r\n// 获取产品图片URL（带时间戳）\r\nconst getProductImageUrl = (item) => {\r\n  // 如果是产品对象\r\n  if (item.product && item.product.image) {\r\n    return addTimestampToUrl(item.product.image);\r\n  } \r\n  // 如果直接有productImage属性\r\n  else if (item.productImage) {\r\n    return addTimestampToUrl(item.productImage);\r\n  } \r\n  // 如果有image属性\r\n  else if (item.image) {\r\n    return addTimestampToUrl(item.image);\r\n  }\r\n  // 返回默认图片\r\n  return '/static/default-product.png';\r\n};\r\n\r\n// 检查图片URL是否变更（从BOS到本地存储）\r\nconst isImageUrlChanged = (url) => {\r\n  if (!url) return false;\r\n  \r\n  // 检查是否是百度云BOS的URL\r\n  const isBosUrl = url.includes('bos.') || url.includes('bj.bcebos.com') || url.includes('bcebos.com');\r\n  \r\n  // 检查是否是新版URL格式（包含/api/uploads/）\r\n  const isNewFormat = url.includes('/api/uploads/');\r\n  \r\n  return isBosUrl || !isNewFormat;\r\n};\r\n\r\n// 尝试将百度云BOS URL转换为本地存储URL格式\r\nconst convertBosToLocalUrl = (url) => {\r\n  if (!url || !isImageUrlChanged(url)) return url;\r\n  \r\n  // 提取文件名和后缀\r\n  const fileName = url.substring(url.lastIndexOf('/') + 1);\r\n  const fileExt = fileName.includes('.') ? '' : '.jpg'; // 如果没有扩展名，默认添加.jpg\r\n  \r\n  // 根据URL路径判断文件类型\r\n  let fileType = 'images';\r\n  if (url.includes('avatar') || url.includes('profile')) {\r\n    fileType = 'avatars';\r\n  } else if (url.includes('product') || url.includes('goods')) {\r\n    fileType = 'products';\r\n  } else if (url.includes('category')) {\r\n    fileType = 'categories';\r\n  }\r\n  \r\n  // 生成日期文件夹 (使用当前日期作为示例，实际情况应该保留原始日期如果可以提取的话)\r\n  const today = new Date();\r\n  const dateFolder = today.getFullYear().toString() + \r\n                    (today.getMonth() + 1).toString().padStart(2, '0') + \r\n                    today.getDate().toString().padStart(2, '0');\r\n  \r\n  // 构建新的URL\r\n  return `http://localhost:8081/api/uploads/${fileType}/${dateFolder}/${fileName}${fileExt}`;\r\n};\r\n\r\n// 清除图片缓存\r\nconst clearImageCache = () => {\r\n  if (typeof plus !== 'undefined' && plus.cache) {\r\n    // 原生App环境\r\n    try {\r\n      plus.cache.clear();\r\n      console.log('已清除原生缓存');\r\n      return true;\r\n    } catch (e) {\r\n      console.error('清除原生缓存失败:', e);\r\n      return false;\r\n    }\r\n  } else if (typeof uni !== 'undefined') {\r\n    // uni-app环境\r\n    try {\r\n      // 清除本地存储中的图片缓存标记\r\n      uni.removeStorageSync('imageCacheTime');\r\n      uni.setStorageSync('imageCacheTime', new Date().getTime());\r\n      console.log('已重置图片缓存时间标记');\r\n      return true;\r\n    } catch (e) {\r\n      console.error('重置图片缓存时间标记失败:', e);\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n// 强制刷新图片\r\nconst forceRefreshImage = (url) => {\r\n  // 如果是旧的BOS链接，尝试转换为新格式\r\n  if (isImageUrlChanged(url)) {\r\n    url = convertBosToLocalUrl(url);\r\n  }\r\n  \r\n  // 添加随机参数破坏缓存\r\n  return addTimestampToUrl(url, false);\r\n};\r\n\r\n// 处理图片URL，自动处理存储变更问题\r\nconst processImageUrl = (url) => {\r\n  // 如果为空，返回默认图片\r\n  if (!url) return '/static/default-product.png';\r\n  \r\n  // 如果是静态资源，直接返回\r\n  if (url.startsWith('/static/')) return url;\r\n  \r\n  // 检查并转换旧BOS地址\r\n  if (isImageUrlChanged(url)) {\r\n    url = convertBosToLocalUrl(url);\r\n  }\r\n  \r\n  // 添加时间戳参数\r\n  return addTimestampToUrl(url);\r\n};\r\n\r\nexport default {\r\n  addTimestampToUrl,\r\n  getProductImageUrl,\r\n  isImageUrlChanged,\r\n  clearImageCache,\r\n  forceRefreshImage,\r\n  convertBosToLocalUrl,\r\n  processImageUrl,\r\n  CACHE_BUSTER\r\n}; "],"names":["uni"],"mappings":"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"}